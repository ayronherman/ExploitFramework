# This is a Python TCP exploit framework
# Ayron Herman
# Use: "python <scriptname> <IP Address> <Port>"

import sys, socket

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)           # Declare a TCP socket
buffer_size = 1024		# Size of buffer for return data
exploit = "blah\r\n"                    # Our future exploit

try:
    rhost = sys.argv[1]             # Recieve remote IP from user
    rport = int(sys.argv[2])         # Recieve Port from user
except:
    print "\nPlease use 2 args"
    print "Use: python <scriptname> <IP Address> <Port>\n"
    sys.exit(1)

try:
    print "\nSending exploit..."
    s.connect ((rhost, rport))					# Setup the TCP connection
    data = s.recv(buffer_size)					# Receive any return data
    s.send(exploit)							# Send the exploit over TCP to rhost
    data = s.recv(buffer_size)					# Receive any return data
    s.close()							# Close the connection
    print "Done!\n"
except:
    print "Could not connect to %s on port %s" % (rhost, rport)
    sys.exit(1)
